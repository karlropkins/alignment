Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 11:20, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
install.packages("microbenchmark")
microbenchmark::microbenchmark( cow = cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)), c_cow= C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)))
test <- microbenchmark::microbenchmark( cow = cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)), c_cow= C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)))
autoplot(test)
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,1,1))
devtools::document()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.9.tar.gz", repos = NULL, type = "source")
alignment::cor_align
alignment::cor_align.default
alignment:::cor_align.default
.Call("_alignment_C_ylagxCOR", 1:10, 1:10, 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, 1:10, 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, as.matrix(1:10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, as.matrix(1:10, nrow=10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, as.matrix(1:10, nrow=10), 3, 1, c(1,1,1,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::build()
devtools::check()
install.packages("~/pkg/alignment/alignment_0.0.9.tar.gz", repos = NULL, type = "source")
require(alignment)
alignment:::cor_align.default
.Call("_alignment_C_ylagxCOR", 1:10, 1:10)
x= 1:10
.Call("_alignment_C_ylagxCOR", x, x)
.Call("_alignment_C_cow", x, x, 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", x, matrix(x), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", x, matrix(x), 3, 1, c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1))
cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
devtools::clean_dll()
devtools::document()
C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1))
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.9.tar.gz", repos = NULL, type = "source")
require(alignment)
alignment:::cor_align
alignment:::cor_align.default
.Call("_alignment_C_ylagxCOR", x, y)
.Call("_alignment_C_cow", 1:10, 1:10, 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10, 10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10, nrow=10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10, ncol=10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10, 10), 3, 1, c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1))
devtools::build()
devtools::document()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.9.tar.gz", repos = NULL, type = "source")
require(alignment)
alignment:::cor_align.default
.Call("_alignment_C_ylagxCOR", 1:10, 1:10, 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, 1:10, 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10), 3, 1, c(1,1,1,1))
Rcpp::compileAttributes();
Rcpp::compileAttributes();
Rcpp::compileAttributes();
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1))
devtools::document()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.9.tar.gz", repos = NULL, type = "source")
require(alignment)
alignment:::cor_align.default
.Call("_alignment_C_cow", 1:10, matrix(1:10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10), 3, 1, c(1,1,1,1))
cow(1:10, 1:10, 3, 1, c(1,1,1,1))
C_cow(1:10, 1:10, 3, 1, c(1,1,1,1))
_alignment_C_cow(1:10, 1:10, 3, 1, c(1,1,1,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10), 3, 1, c(1,1,1,1))
.Call("_alignment_C_histc", 1:10, 2:12)
hist(1:10, 2:12)
histc(1:10, 2:12)
alignment:::histc(1:10, 2:12)
grey.area::splat_date()
grey.area::splat_version(increase="0.0.1")
devtools::document()
devtools::install_github("karlropkins/alignment")
require(alignment)
alignment:::cor_align.default
.Call("_alignment_C_cow", 1:10, matrix(1:10), 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10), 3, 1, c(1,1,1,1))
data.table::fread
data.table:::C_allNAR
Rcpp::compileAttributes()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::build()
require(alignment)
C_cow
_alignment_C_cow
alignment:::C_cow(1:10, 1:10, 3,1, c(1,1,0,1))
alignment:::C_cow(1:10, matrix(1:10), 3,1, c(1,1,0,1))
alignment:::C_histc()
alignment:::C_histc(1,1)
alignment:::histc(1,1)
alignment::histc(1,1)
alignment:::histc(1,1)
alignment::histc(1,1)
alignment:::histc(1,1)
Rcpp::compileAttributes()
Rcpp::compileAttributes()
cow(1:10, 1:10, 3,1, c(1,1,0,1))
load_all()
devtools::load_all()
Rcpp::compileAttributes()
C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
require(alignment)
C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1))
alignment:::C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1))
align:::C_ylagxCOR(1:10, 1:10)
alignment:::C_cow(1:10, matrix(1:10, nrow=1), 3, 1, c(1,1,0,1))
alignment:::C_cow(1:10, matrix(1:10), 3,1, c(1,1,0,1))
alignment:::C_cow(1:10, matrix(1:10, nrow=1), 3,1, c(1,1,0,1))
alignment:::C_cow(1:10, matrix(1:10, 1), 3,1, c(1,1,0,1))
alignment:::C_cow(1:10, matrix(1:10), 3,1, c(1,1,0,1))
alignment:::C_cow(1:10, matrix(1:10), 3,1, c(1,1,1,1))
alignment:::C_cow(1:10, matrix(1:10, 1), 3,1, c(1,1,1,1))
alignment:::C_cow(1:10, matrix(1:10, 1), 3,1, c(1,1,0,1))
alignment:::C_cow(1:10, matrix(1:10, 1), 3,1, c(1,1,1,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10,1), 3, 1, c(1,1,1,1))
.Call("_alignment_C_cow", 1:10, matrix(1:10,1), 3, 1, c(1,1,1,1))
microbenchmark::microbenchmark(r_cow = cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)), c_cow = .Call("_alignment_C_cow", 1:10, matrix(1:10,1), 3, 1, c(1,1,1,1)))
test <- microbenchmark::microbenchmark(r_cow = cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)), c_cow = .Call("_alignment_C_cow", 1:10, matrix(1:10,1), 3, 1, c(1,1,1,1)))
autoplot(test)
autoplot(test)
ggplot2::autoplot(test)
test
2844/357
2844/399
2437/357
test <- microbenchmark::microbenchmark(r_cow = cow(1:100, 1:100, Seg=3, Slack=1, Options = c(1,1,0,1)), c_cow = .Call("_alignment_C_cow", 1:100, matrix(1:100,1), 3, 1, c(1,1,1,1)))
test
ggplot2::autoplot(test)
test <- microbenchmark::microbenchmark(r_cow = cow(1:1000, 1:1000, Seg=3, Slack=1, Options = c(1,1,0,1)), c_cow = .Call("_alignment_C_cow", 1:1000, matrix(1:1000,1), 3, 1, c(1,1,1,1)))
test <- microbenchmark::microbenchmark(c_cow = .Call("_alignment_C_cow", 1:1000, matrix(1:1000,1), 3, 1, c(1,1,1,1)))
ggplot2::autoplot(test)
test
citation("Rcpp")
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, 1:10, nrow=1, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,1,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,1,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, matrix(1:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, matrix(11:20, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:10, 1:10, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(1:20, 1:20, Seg=3, Slack=1, Options = c(1,1,0,1))
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,0,1))
test <- C_cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,0,1))
test$
test[[5]]
test$Xwarped
Rcpp::compileAttributes(); devtools::load_all(); C_cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,0,1)); cow(11:20, 11:20, Seg=3, Slack=1, Options = c(1,1,0,1))
?cor_align
?alignment
cow_align(iris, by=c("Petal.Length"))
cow_align(iris, by=c("Petal.Length", "Petal.Width"))
cow_align(iris, by=c("Petal.Length", "Petal.Width"), 3,1)
cow_align(iris, by=c("Petal.Length", "Petal.Width"), seg=3, slack=1)
cow_align(iris, by=c("Petal.Length", "Petal.Width"), seg=3, slack=1, print.report = F)
cow_align(iris, by=c("Petal.Length", "Petal.Width"), seg=3, slack=1, print.report = T)
?cow_align
10/23
0.4*23
0.04*23
0.004*23
0.005*23
Rcpp::compileAttributes()
Rcpp::document()
devtools::document()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.10.tar.gz", repos = NULL, type = "source")
require(alignment)
require(microbenchmark)
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)))
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)),)
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)))
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow1), Seg=3, Slack=1, Options=c(1,1,0,1)))
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)))
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)))
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)))
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)))
microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)))
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)))
ggplot2::autoplot(test)
ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)))
ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)), times=1000); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)), times=1000); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1)), times=1000); ggplot2::autoplot(test)
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::load_all()
Rcpp::compileAttributes()
devtools::load_all()
cow(1:10, 1:10, 3, 1, c(1,1,0, 1))
Rcpp::compileAttributes()
devtools::load_all()
cow(1:10, 1:10, 3, 1, c(1,1,0, 1))
devtools::document()
devtools::build()
Rcpp::compileAttributes()
devtools::document()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.10.tar.gz", repos = NULL, type = "source")
alignment:::C_ylagxCOR(1:10,1:10)
alignment:::C_cow(1:10, 1:10, 3,1, c(1,1,0,1))
alignment:::C_cow(1:10, 1:10, Seg=3, Slack=1, c(1,1,0,1))
alignment:::C_cow2(1:10, 1:10, Seg=3, Slack=1, c(1,1,0,1))
alignment:::C_cow2(1:10, matrix(1:10, nrow=1), Seg=3, Slack=1, c(1,1,0,1))
Rcpp::compileAttributes()
devtools::build()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.10.tar.gz", repos = NULL, type = "source")
alignment:::C_cow(1:10, 1:10, 3, 1, c(1,1,0,1))
.Call("_alignment_C_ylagxCOR", 1:10, 1:10)
.Call("_alignment_cow", 1:10, 1:10, 3, 1, c(1,1,0,1))
.Call("_alignment_C_cow", 1:10, 1:10, 3, 1, c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.10.tar.gz", repos = NULL, type = "source")
alignment:::C_cow(1:10, 1:10, 3, 1, c(1,1,0,1))
alignment:::C_cow2(1:10, 1:10, 3, 1, c(1,1,0,1))
alignment:::C_cow2(1:10, matrix(1:10, nrow=1), 3, 1, c(1,1,0,1))
.Call("_alignment_C_ylagxCOR", 1:10, 1:10)
.Call("_alignment_C_cow", 1:10, 1:10, 3, 1, c(1,1,0,1))
require(alignment)
C_cow2(1:10, matrix(1:10, nrow=1), 3, 1, c(1,1,0,1))
alignment:::C_cow2(1:10, matrix(1:10, nrow=1), 3, 1, c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::load_all()
C_cow2(1:10, 1:10, 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(1:10), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(1:10, nrow=1), 3, 1, c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::build()
devtools::load_all()
C_cow2(1:10, matrix(1:10, nrow=1), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 1:10), nrow=2), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=2), 3, 1, c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::load_all()
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=2), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=2), 3, 1:2, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=2), 3, 1:3, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=2), 3, 1:4, c(1,1,0,1))
C_cow(1:10, matrix(c(1:10, 11:20), nrow=2), 3, 1, c(1,1,0,1))
C_cow(1:10, matrix(c(1:10), nrow=2), 3, 1, c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::load_all()
C_cow(1:10, matrix(c(1:10), nrow=2), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=2), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=10), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=1), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 11:20), nrow=1), 3, 1, c(1,1,1,1))
C_cow(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::load_all()
C_cow2(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow(11:20, matrix(c(11:20), nrow=1), 3, 1, c(1,1,0,1))
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1, c(1,1,0,1))
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1, 1)
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1)
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1, c(1,1,0,1))
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1, c(1,1,0,1,1,1))
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1, c(1,0,0,1,1,1))
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1, c(0,0,0,1,1,1))
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1, c(0,2,0,1,1,1))
C_cow2(11:20, matrix(c(11:20), nrow=1), 3, 1, c(0,8,0,1,1,1))
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
require(microbenchmark)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
test <- microbenchmark(cow = .Call("_alignment_C_cow", x=1:10, y=1:10, Seg=3, Slack=1, Options=c(1,1,0,1)), cow2 = .Call("_alignment_C_cow2", x=1:10, y=matrix(1:10, nrow=1), Seg=3, Slack=1, Options=c(1,1,0,1))); ggplot2::autoplot(test)
.Call("_alignment_C_cow2", x=rep(1:10,2), y=matrix(c(1:10, 11:20), nrow=2), Seg=3, Slack=1, Options=c(1,1,0,1))
.Call("_alignment_C_cow2", x=rep(1:10), y=matrix(c(1:10, 11:20), nrow=2), Seg=3, Slack=1, Options=c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::load_all()
C_cow(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow2(1:10, 1:10, nrow=1), 3, 1, c(1,1,0,1))
C_cow2(1:10, 1:10, 3, 1, c(1,1,0,1))
C_cow2(1:10, 1:10, nrow=1), 3, 1, c(1,1,0,1))
C_cow3(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::load_all()
C_cow2(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow(1:10, c(1:10), 3, 1, c(1,1,0,1))
C_cow3(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow(1:10, c(1:10), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow3(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document(); devtools::load_all()
C_cow2(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow3(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow3(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10), nrow=1), 3, 1, c(1,1,0,1))
cow(1:10, matrix(1:20,nrow=2),3,1,c(1,1,0,1))
cow(1:10, matrix(1:20,nrow=1),3,1,c(1,1,0,1))
cow(1:10, matrix(1:20,ncol=2),3,1,c(1,1,0,1))
cow(1:10, 1:20,3,1,c(1,1,0,1))
cow(1:10, 1:20,3,1,c(1,1,1,1))
cow(1:10, matrix(1:20,nrow=2, byrow = T), ,3,1,c(1,1,1,1))
cow(1:10, matrix(1:20,nrow=2, byrow = T),3,1,c(1,1,1,1))
matrix(1:20,nrow=2, byrow = T)
C_cow2(1:10, matrix(1:20,nrow=2, byrow = T), 3,1, c(1,1,0,1)
)
C_cow2(1:10, matrix(c(1:10, 1:10),nrow=2, byrow = T), 3,1, c(1,1,0,1))
C_cow2(1:10, matrix(c(1:10, 21:30),nrow=2, byrow = T), 3,1, c(1,1,0,1))
C_cow3(1:10, matrix(c(1:10, 21:30),nrow=2, byrow = T), 3,1, c(1,1,0,1))
C_cow3(1:10, matrix(c(1:10, 1,3,3,3,5,6,7,7,7,9),nrow=2, byrow = T), 3,1, c(1,1,0,1))
C_cow3(1:10, matrix(c(1,3,3,3,5,6,7,7,7,9),nrow=1, byrow = T), 3,1, c(1,1,0,1))
cow(1:10, matrix(c(1,3,3,3,5,6,7,7,7,9),nrow=1, byrow = T), 3,1, c(1,1,0,1))
devtools::document()
install.packages("devtools")
devtools::document()
install.packages("RcppDE")
install.packages("data.table")
install.packages("ggplot2")
devtools::document()
install.packages("pems.utils")
install.packages("loa")
?loa
?loa::`loa-package`
loa::loaMapPlot(zinc~latitude*longitude, col.regions=c("grey", "darkred"),
data=lat.lon.meuse, map=roadmap.meuse)
loa::loaMapPlot(zinc~latitude*longitude, col.regions=c("grey", "darkred"),
data=loa::lat.lon.meuse, map=loa::roadmap.meuse)
install.packages("sf")
loa::loaMapPlot(zinc~latitude*longitude, col.regions=c("grey", "darkred"),
data=loa::lat.lon.meuse, map=loa::roadmap.meuse)
loa::loaMapPlot(zinc~latitude*longitude, col.regions=c("grey", "darkred"),
data=loa::lat.lon.meuse)
install.packages("pems.utils")
install.packages("pems.utils", repos="http://R-Forge.R-project.org")
install.packages("baseline")
install.packages("dplyr")
install.packages("pems.utils", repos="http://R-Forge.R-project.org")
?pems.utils::`6.3.corrections`
correctBaseline(conc.co2, data=pems.1)
require(pems.utils)
correctBaseline(conc.co2, data=pems.1)
Rcpp::compileAttributes()
devtools::load_all()
Rcpp::compileAttributes()
devtools::load_all()
devtools::document()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::load_all()
Rcpp::compileAttributes()
devtools::load_all()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::load_all()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::check()
devtools::build()
