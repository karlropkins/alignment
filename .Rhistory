plot(1,1)
knitr::opts_chunk$set(echo = TRUE)
require(AQEval)
install.packages("AQEval")
require(AQEval)
?quantBreakPoints
require(AQEval)
temp <- openair::timeAverage(aq.data, "1 day")
#break-points
quantBreakPoints(temp, "no2", h=0.3)
require(AQEval)
aq.data$dswb.no2 <- isolateContribution(aq.data,
"no2", background="bg.no2")
#compare at 7 day resolution:
temp <- openair::timeAverage(aq.data, "7 day")
#without dswb
quantBreakPoints(temp, "no2", test=FALSE, h=0.1)
#with dswb
quantBreakPoints(temp, "dswb.no2", test=FALSE, h=0.1)
require(AQEval)
aq.data$dswb.no2 <- isolateContribution(aq.data,
"no2", background="bg.no2")
#compare at 7 day resolution:
temp <- openair::timeAverage(aq.data, "3 day")
#without dswb
quantBreakPoints(temp, "no2", test=FALSE, h=0.1)
#with dswb
quantBreakPoints(temp, "dswb.no2", test=FALSE, h=0.1)
require(AQEval)
aq.data$dswb.no2 <- isolateContribution(aq.data,
"no2", background="bg.no2")
#compare at 7 day resolution:
temp <- openair::timeAverage(aq.data, "1 day")
#without dswb
quantBreakPoints(temp, "no2", test=FALSE, h=0.1)
#with dswb
quantBreakPoints(temp, "dswb.no2", test=FALSE, h=0.1)
?quantBreakPoints
require(AQEval)
temp <- openair::timeAverage(aq.data, "7 day")
#break-points
quantBreakPoints(temp, "no2", h=0.3)
require(AQEval)
temp <- openair::timeAverage(aq.data, "1 day")
#break-points
quantBreakPoints(temp, "no2", h=0.3)
require(AQEval)
temp <- openair::timeAverage(aq.data, "1 day")
#break-points
ans <- quantBreakPoints(temp, "no2", h=0.3)
quantBreakPoints(temp, "no2", h=0.3,
ylab="1-day resolution NO2 [ug/m3]",
xlab="")
quantBreakPoints(temp, "no2", h=0.3,
pt.col = c("white", "black")
line.col = "blue",
quantBreakPoints(temp, "no2", h=0.3,
pt.col = c("white", "black"),
line.col = "blue",
break.col ="purple")
quantBreakPoints(temp, "no2", h=0.3,
pt.col = c("white", "black"),
line.col = "azure",
break.col ="purple")
quantBreakPoints(temp, "no2", h=0.3,
pt.col = c("white", "black"),
line.col = "green",
break.col ="red")
quantBreakPoints(temp, "no2", h=0.3,
ylab="1-day resolution  NO2 [ug/m3]",
xlab="")
quantBreakPoints(temp, "no2", h=0.3,
ylab="NO2 [ug/m3]",
xlab="")
devtools::document()
install.packages("~/pkg/grey.area/grey.area_0.0.16.tar.gz", repos = NULL, type = "source")
grey.area::splat_date()
install.packages("sf")
install.packages("~/pkg/grey.area/grey.area_0.0.16.tar.gz", repos = NULL, type = "source")
install.packages("~/pkg/grey.area/grey.area_0.0.16.tar.gz", repos = NULL, type = "source")
grey.area::splat_date()
grey.area::splat_version(increase = "0.0.1")
devtools::document()
devtools::build()
devtools::document()
devtools::build()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_news()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
devtools::document()
devtools::build()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_site()
devtools::build()
devtools::document()
pkgdown::init_site()
pkgdown::build_news()
pkgdown::build_news()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_news()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
devtools::load_all()
devtools::load_all()
devtools::load_all()
?align
?align::cor_align
cor_align(1:10, 1:10)
cor_align(1:10, 1:10, 5)
cor_align(1:10, 1:10, min.overlap=5)
cor_align
cor_align
cor_align.default
devtools::build()
install.packages("~/pkg/align/align_0.0.6.tar.gz", repos = NULL, type = "source")
devtools::check()
devtools::build()
install.packages("~/pkg/align/align_0.0.6.tar.gz", repos = NULL, type = "source")
devtools::check()
devtools::document()
devtools::build()
install.packages("~/pkg/align/align_0.0.6.tar.gz", repos = NULL, type = "source")
install.packages("~/pkg/align/align_0.0.6.tar.gz", repos = NULL, type = "source")
devtools::check()
devtools::document()
devtools::build()
install.packages("~/pkg/align/align_0.0.6.tar.gz", repos = NULL, type = "source")
devtools::check()
usethis::use_code_of_conduct()
usethis::use_code_of_conduct("karl.ropkins@gmail.com")
devtools::document()
devtools::unload()
devtools::build()
install.packages("~/pkg/align/align_0.0.6.tar.gz", repos = NULL, type = "source")
devtools::check()
?align::cor_align
?align::cow_align
?align::fit_align
devtools::document()
?align::fit_align
devtools::document()
devtools::document()
devtools::build()
install.packages("~/pkg/align/align_0.0.6.tar.gz", repos = NULL, type = "source")
?align::fit_align
?align::cow_align
devtools::document()
devtools::build()
install.packages("~/pkg/align/align_0.0.6.tar.gz", repos = NULL, type = "source")
devtools::check()
?align::align
?align::cor_align
?align::cow_align
devtools::load_all()
cor_align(iris, iris, by=c("Petal.Width"))
ans <- cor_align(iris, iris, by=c("Petal.Width"))
ans <- cor_align(iris, iris[2:150,], by=c("Petal.Width"))
ans <- cor_align(iris, iris[10:150,], by=c("Petal.Width"))
ans <- cor_align(iris[50:150], iris[100:200,], by=c("Petal.Width"))
ans <- cor_align(iris[50:150], iris[1:100,], by=c("Petal.Width"))
ans <- cor_align(iris[50:150,], iris[1:100,], by=c("Petal.Width"))
ans <- cor_align(iris[25:150,], iris[1:100,], by=c("Petal.Width"))
ans <- cor_align(iris[25:150,], iris[1:100,], by=c("Petal.Width", "Petal.Length"))
grey.area::splat_date()
grey.area::splat_version(in)
grey.area::splat_version(increase="0.0.1")
C_ylagxCOR(1:10, 1:12)
?cow
?cow_align
?cor_align
?n_align
n_align(iris, iris)
?warp
x <- 1:1000
plot(x, type = "l", main = "Simple Warping")
#transformations < 1 compress time-series
lines(warp(x, 0.5), col = "red")
#transformations > 1 expand time-series
#to expand and the compress, and end at original end value
#   mean(transformation) should equal 1
lines(warp(x, c(1.75, 0.25)), col = "blue")
legend(725, 350, c("0.5", "1.75, 0.25"),
col=c("red", "blue"), lty=1, cex=0.75)
airquality
n_align(iris, by=c("Sepal.Length"), n=3)
n_align(iris[1:10,], by=c("Sepal.Length"), n=3)
n_align(iris[1:10,], by=c("Sepal.Length", "Petal.Width"), n=3)
n_align(iris[1:10,], y="Sepal.Length", n=3)
n_align(iris[1:10,], by="Sepal.Length", n=3)
x=n_align(iris[1:10,], by="Sepal.Length", n=3)
cor_align(x, by="Sepal.Length")
x
cor_align(x, by=c("Sepal.Width", "Sepal.Length"))
x=n_align(iris[1:50,], by="Sepal.Length", n=3)
cor_align(x, by=c("Sepal.Width", "Sepal.Length"))
o <- cor_align(x, by=c("Sepal.Width", "Sepal.Length"))
x=n_align(iris[1:50,], by="Sepal.Length", n=-3)
o <- cor_align(x, by=c("Sepal.Width", "Sepal.Length"))
o <- cor_align(x, by=c("Sepal.Width", "Sepal.Length"))
class(o)
o <- cor_align(x, by=c("Sepal.Width", "Sepal.Length"), output=c("alignment"))
o
o$offset
o$reports
max(o$reports$scores
)
which(o$reports$scores= max(o$reports$scores))
which(o$reports$scores== max(o$reports$scores))
o$reports$index[41]
n_align(iris[1:50,], by="Sepal.Length", n=-3)
n_align(iris[1:50,], by="Sepal.Length", n=-1)
n_align(iris[1:50,], by="Sepal.Length", n=2)
o
o$sources
plot(o)
plot(o)
plot(o, xlab="hello")
?align
?align::`align-package`
?align::align
?align::cor_align
?align::n_align
?align::cor_align
?align::cow_align
?align::fit_align
devtools::build()
align_extraArgsHandler
align:::align_extraArgsHandler
align:::load_all()
devtools::load_all()
devtools::load_all()
cow_align(iris, iris)
align:::load_all()
devtools::load_all()
cow_align(iris, iris)
cow_align(iris, iris, seg=2, slack=1)
cow_align(iris, iris, seg=3, slack=1)
cow_align(iris, seg=3, slack=1)
cow_align(iris, seg=3, by=c("Petal.Width", "Petal.Length"), slack=1)
devtools::load_all()
devtools::load_all()
cow_align(iris, seg=3, by=c("Petal.Width", "Petal.Length"), slack=1)
modifyList
devtools::load_all()
devtools::load_all()
cow_align(iris, seg=3, by=c("Petal.Width", "Petal.Length"), slack=1)
warnings()
cow_align(iris, seg=4, by=c("Petal.Width", "Petal.Length"), slack=1)
cow_align(iris, seg=3, by=c("Petal.Width", "Petal.Length"), slack=1)
cow_align(iris, seg=3, by=c("Petal.Width", "Petal.Length"), slack=2)
cow_align(iris, seg=4, by=c("Petal.Width", "Petal.Length"), slack=2)
cow_align(iris, seg=4, by=c("Petal.Width", "Petal.Length"), slack=2)
devtools::build()
a <- cow_align(iris, seg=4, by=c("Petal.Width", "Petal.Length"), slack=2)
devtools::load_all()
a <- cow_align(iris, seg=4, by=c("Petal.Width", "Petal.Length"), slack=2)
devtools::load_all()
a <- cow_align(iris, seg=4, by=c("Petal.Width", "Petal.Length"), slack=2)
a <- cow_align(iris, seg=4, by=c("Petal.Width", "Petal.Length"), slack=2)
devtools::build()
install.packages("~/pkg/align/align_0.0.7.tar.gz", repos = NULL, type = "source")
devtools::check()
devtools::document()
devtools::build()
install.packages("~/pkg/align/align_0.0.7.tar.gz", repos = NULL, type = "source")
?align::cow_align
?dplyr::join
devtools::check()
?align::cor_align
?align::n_align
devtools::load_all()
fit_align(iris$Sepal.Length, iris$Sepal.Width)
iris$Sepal.Length/iris$Sepal.Width
devtools::load_all()
fit_align(iris$Sepal.Length, iris$Sepal.Width)
fit_align(iris$Sepal.Length, iris$Sepal.Width)
fit_align(iris$Sepal.Length, iris$Sepal.Width, fun=function(par, x) par[1]*x, lower=-1, upper=10)
devtools::document()
devtools::document()
?fit_align
?cor_align
?cow_align
devtools::document()
?cow_align
?n_align
devtools::document()
?cor_align
cor_align(iris$Sepal.Length, iris$Sepal.Width)
cor_align(iris$Sepal.Length, iris$Sepal.Length)
cor_align(iris$Sepal.Length, iris$Sepal.Length, min.over=100)
cor_align(iris$Sepal.Length, iris$Sepal.Length, min.over=150)
cor_align(iris$Sepal.Length, iris$Sepal.Length, min.overlap=100)
cor_align(iris$Sepal.Length, iris$Sepal.Length, min.overlap=120)
cor_align(iris$Sepal.Length, iris$Sepal.Length, min.overlap=125)
?cor_align.default
devtools::document()
grey.area::splat_date()
devtools::build()
devtools::load_all()
?regularize
?warp
?warpbreaks
?warp
devtools::build()
install.packages("~/pkg/align/align_0.0.7.tar.gz", repos = NULL, type = "source")
devtools::check()
devtools::document()
devtools::build()
install.packages("~/pkg/align/align_0.0.7.tar.gz", repos = NULL, type = "source")
devt
devtools::build()
devtools::document()
devtools::document()
devtools::document()
?alignment
devtools::document()
?alignment
?`alignment-package`
devtools::document()
?`alignment-package`
?alignment
Rcpp::compileAttributes()
devtools::buid()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.7.tar.gz", repos = NULL, type = "source")
devtools::document()
devtools::document()
Rcpp::compileAttributes()
devtools::build()
devtools::check()
devtools::document()
Rcpp::compileAttributes()
devtools::build()
install.packages("~/pkg/alignment/alignment_0.0.7.tar.gz", repos = NULL, type = "source")
require(alignment)
cor_align(iris, iris)
cor_align(iris$Sepal.Length, iris$Sepal.Width)
devtools::check()
Rcpp::compileAttributes()
devtools::build()
Rcpp::sourceCpp(file.choose())
Rcpp::sourceCpp(file.choose())
Rcpp::compileAttributes()
devtools::document()
C_ylagxCOR(1:10, 1:12)
Rcpp::compileAttributes()
devtools::build()
devtools::check()
install.packages("~/pkg/alignment/alignment_0.0.7.tar.gz", repos = NULL, type = "source")
devtools::check()
cor_align(iris, iris)
cor_align(iris$Sepal.Length, iris$Sepal.Length)
cor_align(iris$Sepal.Length, iris$Sepal.Length[10:57])
cor_align(iris, iris$Sepal.Length[10:57], by="Sepal.Width")
cor_align(iris, iris$Sepal.Length[10:57], by="Sepal.Width", min.overlap=50)
cor_align(iris, iris$Sepal.Length[10:57], by="Sepal.Length", min.overlap=50)
a <- cor_align(iris, iris$Sepal.Length[10:57], by="Sepal.Length", min.overlap=50)
a <- cor_align(iris, iris$Sepal.Length[10:57], by="Sepal.Width", min.overlap=50)
a <- cor_align(iris, iris$Sepal.Length[10:50], by="Sepal.Width", min.overlap=50)
a <- cor_align(iris, iris$Sepal.Length[10:50], by="Sepal.Width", min.overlap=30)
a <- cor_align(iris, iris$Sepal.Length[10:50], by="Sepal.Width", min.overlap=20)
a <- cor_align(iris, iris$Sepal.Length[10:50], by="Sepal.Width", min.overlap=10)
a <- cor_align(iris, iris$Sepal.Length[10:50], by="Sepal.Width")
a <- cor_align(iris, iris$Sepal.Length[10:50], by="Sepal.Width")
a
?alignment::alignment
?alignment
devtools::load_all()
?alignment
devtools::document()
?alignment
devtools::document()
?alignment
devtools::document()
?alignment
devtools::document()
?alignment
devtools::document()
?alignment
devtools::document()
?alignment
devtools::document()
?alignment
pkgload::dev_help('alignment-package')
devtools::document()
?alignment
devtools::document()
devtools::document()
?alignment
devtools::document()
?alignment
devtools::document()
?cow
?cow_align
devtools::document()
devtools::document()
devtools::document()
?cow_align
devtools::document()
?cow_align
?warp
devtools::load_all()
?warp
cor_align(iris, iris)
cow_align(iris, iris, 4,1)
cow_align(iris, iris, by = c("Sepal.length"), 4, 1)
cow_align(iris, iris, by = c("Sepal.Length"), 4, 1)
cow_align(iris, iris, by = c("Sepal.Length"), 7, 4)
cow_align(iris, iris, by = c("Sepal.Length", "Sepal.Width"), 7, 4)
devtools::document()
?cor_align
?cow_align
grey.area::splate_version(increase="0.0.1")
grey.area::splat_version(increase="0.0.1")
build()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::check()
require(alignment)
n_align
n_align(iris, iris)
devtools::load_all()
n_align(iris, iris)
cow_align(iris, by=c("Sepal.Length", "Sepal.Width"))
cow_align(iris, by=c("Sepal.Length", "Sepal.Width"), 4, 2)
names(iris)
cow_align(iris, by=c("Sepal.Length", "Sepal.Width"), 4, 2)
cow_align(iris, iris, by=c("Sepal.Length", "Sepal.Width"), 4, 2)
cow_align(iris, by=c("Sepal.Length", "Sepal.Width"), 4, 2)
n_align(iris, by=c("Sepal.Length", "Sepal.Width"), 4, 2)
n_align(iris, by=c("Sepal.Length", "Sepal.Width"), n=2)
n_align(iris, by=c("Sepal.Length", "Sepal.Width")
)
n_align(iris, by=c("Sepal.Length", "Sepal.Width"), n=2)
cow_align(iris, by=c("Sepal.Length", "Sepal.Width"), seg=4, slack=2)
pkdown::build_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
devtools::build()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_reference()
pkgdown::build_news()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_news()
pkgdown::build_home()
pkgdown::init_site()
?dplyr::join
?data.table::merge.data.table
library(Rcpp)
sourceCpp(file.choose()) #select C_ylagxCOR
library(Rcpp)
sourceCpp(file.choose()) #select C_ylagxCOR
library(Rcpp)
sourceCpp(file.choose()) #select C_ylagxCOR
C_ylagxCOR(iris$Sepal.Length[1:10], iris$Petal.Width)
C_ylagxCOR(iris$Sepal.Length[1:10], iris$Petal.Width)
C_ylagxCOR(iris$Sepal.Length[1:10], iris$Petal.Width)
